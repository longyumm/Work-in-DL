##use the file namesd data.txt
import numpy as np 
from keras.models import Sequential 
from keras.layers.core import Dense,Activation,Dropout
from keras.optimizers import Adam
from keras.utils import np_utils
from keras import regularizers
import pandas as pd
import matplotlib.pyplot as plt  
from mpl_toolkits.mplot3d import Axes3D 


float_data=[]
divide_data=[]

with open('data.txt') as f:
	line=f.read().splitlines()
	for single in line:
		po=float(single)
		float_data.append(po)

##将数据进行float化

for i in range(0,len(float_data),25551):
	b=float_data[i:i+25551]
	divide_data.append(b)

##将数据分组，以方便转换成矩阵

metrics_data=np.array(divide_data).T
#print(metrics_data)
##转换成矩阵

x_train=metrics_data[:20000,0:3]
y_train=metrics_data[:20000,3]

x_test=metrics_data[20001:,0:3]
y_test=metrics_data[20001:,3]


ax = plt.figure(1).add_subplot(111, projection = '3d') 
ax.scatter(metrics_data[:,0],metrics_data[:,1],metrics_data[:,2],c=metrics_data[:,3], marker='^')
ax.set_xlabel('Successful_Connection') 
ax.set_ylabel('Frequency')
ax.set_zlabel('Useful_Information') 

##plot the dataset with 3D figure

##

model = Sequential()
model.add(Dense(10, input_dim=3, activation='elu',kernel_regularizer=regularizers.l2(0.01)))
model.add(Dropout(0.1))
model.add(Dense(10,activation='elu'))
model.add(Dropout(0.1))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='logcosh',optimizer='Adam',metrics=['accuracy'])
model.fit(x_train, y_train,epochs=50,batch_size=200)
hist = model.fit(x_train, y_train,epochs=50,batch_size=20)

acc_plot=np.array(hist.history['acc'])
loss_plot=np.array(hist.history['loss'])

score_1 = model.evaluate(x_train, y_train, batch_size=20000)
score_2 = model.evaluate(x_test, y_test, batch_size=5551)


print('train_accuracy',score_1[1])
print('test_accuracy',score_2[1])

## train the dataset

##

plt.figure(2)
x_plot = np.arange(0,50,1)
plt.plot(x_plot, acc_plot)

## the figure of acc

##

plt.figure(3)
plt.plot(x_plot,loss_plot)

## the figure of loss
plt.show()
