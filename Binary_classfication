## use the file named data.txt
import numpy as np 
from keras.models import Sequential 
from keras.layers.core import Dense,Activation,Dropout
from keras.optimizers import Adam
from keras.utils import np_utils
from keras import regularizers
import pandas as pd
import matplotlib.pyplot as plt  
from mpl_toolkits.mplot3d import Axes3D 


float_data=[]
divide_data=[]
x_fig1=[]
y_fig1=[]
z_fig1=[]
x_fig0=[]
y_fig0=[]
z_fig0=[]

with open('data.txt') as f:
	line=f.read().splitlines()
	for single in line:
		po=float(single)
		float_data.append(po)

##将数据进行float化

for i in range(0,len(float_data),25551):
	b=float_data[i:i+25551]
	divide_data.append(b)

##将数据分组，以方便转换成矩阵

metrics_data=np.array(divide_data).T
#print(metrics_data)
##转换成矩阵

x_train=metrics_data[:,0:3]
y_train=metrics_data[:,3]

for length in range(25551):
	
	if metrics_data[length,3]==1:
		x_fig1.append(metrics_data[length,0])
		y_fig1.append(metrics_data[length,1])
		z_fig1.append(metrics_data[length,2])
	
	else:

		x_fig0.append(metrics_data[length,0])
		y_fig0.append(metrics_data[length,1])
		z_fig0.append(metrics_data[length,2])

ax = plt.figure().add_subplot(111, projection = '3d') 
ax.scatter(x_fig1, y_fig1, z_fig1, c = 'b', marker = 'o') 
ax.scatter(x_fig0, y_fig0, z_fig0, c = 'r', marker = '^')
ax.set_zlabel('Z') 
ax.set_ylabel('Y')
ax.set_xlabel('X') 

##plot the data


model = Sequential()
model.add(Dense(10, input_dim=3, activation='elu',kernel_regularizer=regularizers.l2(0.01)))
model.add(Dropout(0.1))
model.add(Dense(10,activation='elu'))
model.add(Dropout(0.1))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='logcosh',optimizer='Adam',metrics=['accuracy'])
model.fit(x_train, y_train,epochs=20,batch_size=200)
score = model.evaluate(x_train, y_train, batch_size=20000)

print('train_accuracy',score[1])
plt.show() 
